<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Bye" xml:space="preserve">
    <value>Pleased to serve you!</value>
  </data>
  <data name="Cashier" xml:space="preserve">
    <value>Cashier</value>
  </data>
  <data name="Change" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="CkbTaxStatus" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="ColumnHeaderAppliedTime" xml:space="preserve">
    <value>Time of application</value>
  </data>
  <data name="ColumnHeaderCode" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="ColumnHeaderIntoMoney" xml:space="preserve">
    <value>Into Money</value>
  </data>
  <data name="ColumnHeaderMinValue" xml:space="preserve">
    <value>Min requirements</value>
  </data>
  <data name="ColumnHeaderPrice" xml:space="preserve">
    <value>Price</value>
  </data>
  <data name="ColumnHeaderProduct" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="ColumnHeaderPromotion" xml:space="preserve">
    <value>Pro (%)</value>
  </data>
  <data name="ColumnHeaderPromotionType" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="ColumnHeaderQuantity" xml:space="preserve">
    <value>Qty</value>
  </data>
  <data name="ColumnHeaderValue" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="CurrencySymbol" xml:space="preserve">
    <value>$</value>
  </data>
  <data name="CustomerMoney" xml:space="preserve">
    <value>Customer's Money</value>
  </data>
  <data name="ErrorTitle" xml:space="preserve">
    <value>Error</value>
  </data>
  <data name="FormText" xml:space="preserve">
    <value>Checkout</value>
  </data>
  <data name="GrbAfterTax" xml:space="preserve">
    <value>After Tax</value>
  </data>
  <data name="GrbGiveChange" xml:space="preserve">
    <value>Change</value>
  </data>
  <data name="GrbLastTotal" xml:space="preserve">
    <value>Last total</value>
  </data>
  <data name="GrbManualPromotions" xml:space="preserve">
    <value>Promotions applied manually</value>
  </data>
  <data name="GrbPromotions" xml:space="preserve">
    <value>Promotions</value>
  </data>
  <data name="GrbTax" xml:space="preserve">
    <value>Tax (%)</value>
  </data>
  <data name="GrbTotal" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="IbtnApply" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="IbtnCancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="IbtnCheck" xml:space="preserve">
    <value>Check</value>
  </data>
  <data name="IbtnCheckout" xml:space="preserve">
    <value>Checkout</value>
  </data>
  <data name="IbtnPrintProvisionalInvoice" xml:space="preserve">
    <value>Print Provisional</value>
  </data>
  <data name="IbtnScan" xml:space="preserve">
    <value>Scan</value>
  </data>
  <data name="IntoMoney" xml:space="preserve">
    <value>Into</value>
  </data>
  <data name="IpicClose" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="IpicMaximize" xml:space="preserve">
    <value>Maximize</value>
  </data>
  <data name="IpicWindowCalculator" xml:space="preserve">
    <value>Calculator</value>
  </data>
  <data name="LastTotal" xml:space="preserve">
    <value>Last Total</value>
  </data>
  <data name="LbChange" xml:space="preserve">
    <value>Give change</value>
  </data>
  <data name="LbCustomerMoney" xml:space="preserve">
    <value>Customer's money</value>
  </data>
  <data name="LbTitle" xml:space="preserve">
    <value>Checkout</value>
  </data>
  <data name="MsgAutoApplyError" xml:space="preserve">
    <value>The automatically applied program cannot be canceled. Please go to the admin page to set up.</value>
  </data>
  <data name="MsgCheckoutConfirm" xml:space="preserve">
    <value>Double check your tax options, promotions, rounding... and be sure you want to make the payment.</value>
  </data>
  <data name="MsgCode1" xml:space="preserve">
    <value>Type:</value>
  </data>
  <data name="MsgCode10" xml:space="preserve">
    <value>Code not available.</value>
  </data>
  <data name="MsgCode11" xml:space="preserve">
    <value>Reason:</value>
  </data>
  <data name="MsgCode12" xml:space="preserve">
    <value>This program is not currently active.</value>
  </data>
  <data name="MsgCode13" xml:space="preserve">
    <value>Currently is not the applicable time.</value>
  </data>
  <data name="MsgCode14" xml:space="preserve">
    <value>The invoice value does not reach the minimum value.</value>
  </data>
  <data name="MsgCode15" xml:space="preserve">
    <value>This program has been applied on the invoice. Cannot be applied more than once.</value>
  </data>
  <data name="MsgCode16" xml:space="preserve">
    <value>Code has been used.</value>
  </data>
  <data name="MsgCode2" xml:space="preserve">
    <value>Description:</value>
  </data>
  <data name="MsgCode3" xml:space="preserve">
    <value>Value:</value>
  </data>
  <data name="MsgCode4" xml:space="preserve">
    <value>Time:</value>
  </data>
  <data name="MsgCode5" xml:space="preserve">
    <value>Minimum invoice value:</value>
  </data>
  <data name="MsgCode6" xml:space="preserve">
    <value>Status:</value>
  </data>
  <data name="MsgCode7" xml:space="preserve">
    <value>Active</value>
  </data>
  <data name="MsgCode8" xml:space="preserve">
    <value>Not activated</value>
  </data>
  <data name="MsgCode9" xml:space="preserve">
    <value>Availability code.</value>
  </data>
  <data name="MsgCodeNotBlank" xml:space="preserve">
    <value>No code is entered.</value>
  </data>
  <data name="MsgCodeNotExist" xml:space="preserve">
    <value>This code does not exist.</value>
  </data>
  <data name="MsgFailApply" xml:space="preserve">
    <value>Applying failed.</value>
  </data>
  <data name="MsgNotFound" xml:space="preserve">
    <value>Not Found</value>
  </data>
  <data name="MsgSuccessApply" xml:space="preserve">
    <value>Successfully applied.</value>
  </data>
  <data name="MsgSuccessDelete" xml:space="preserve">
    <value>Delete successfully.</value>
  </data>
  <data name="Product" xml:space="preserve">
    <value>Product</value>
  </data>
  <data name="Promotion" xml:space="preserve">
    <value>Promotions</value>
  </data>
  <data name="Quantity" xml:space="preserve">
    <value>Qty</value>
  </data>
  <data name="Rounded" xml:space="preserve">
    <value>Rounded</value>
  </data>
  <data name="Tax" xml:space="preserve">
    <value>Tax</value>
  </data>
  <data name="Time" xml:space="preserve">
    <value>Time</value>
  </data>
  <data name="Total" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="TtMaximize" xml:space="preserve">
    <value>Maximize</value>
  </data>
  <data name="TtNormal" xml:space="preserve">
    <value>Normal</value>
  </data>
  <data name="WarningTitle" xml:space="preserve">
    <value>Warning</value>
  </data>
</root>